<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 我们常用的配置数据源的方式,就是使用的 BeanFactoryPostProcessor 的方式 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations" value="classpath:jdbc1.properties"/>
	</bean>
	
	<bean id="dataSource1" class="com.heleeos.bean.MyDataSource">
	    <property name="driverClassName" value="${jdbc.driverClassName}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- 下面这种情况是,xml配置的是默认值,如果 jdbc.properties 也有对应的值,就会替换 -->
	<bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
        <property name="locations" value="classpath:jdbc2.properties"/>
    </bean>
    
    <bean id="dataSource2" class="com.heleeos.bean.MyDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306"/>
        <property name="username" value="username"/>
        <property name="password" value="password"/>
    </bean>
	
</beans>